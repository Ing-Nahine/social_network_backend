# Generated by Django 5.2.5 on 2025-08-25 16:27

import apps.media_management.models
import django.core.validators
import django.db.models.deletion
import imagekit.models.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Vidéo'), ('gif', 'GIF'), ('audio', 'Audio')], max_length=10, verbose_name='Type de média')),
                ('usage_type', models.CharField(choices=[('post', 'Post'), ('profile_avatar', 'Avatar de profil'), ('profile_banner', 'Bannière de profil'), ('message', 'Message privé')], max_length=20, verbose_name="Type d'usage")),
                ('file', models.FileField(upload_to=apps.media_management.models.get_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif', 'webp', 'mp4', 'webm', 'mov', 'avi', 'mp3', 'wav'])], verbose_name='Fichier')),
                ('original_filename', models.CharField(max_length=255, verbose_name='Nom de fichier original')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='Taille du fichier (bytes)')),
                ('mime_type', models.CharField(blank=True, max_length=100, verbose_name='Type MIME')),
                ('width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Largeur')),
                ('height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Hauteur')),
                ('duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Durée (secondes)')),
                ('alt_text', models.CharField(blank=True, max_length=200, verbose_name='Texte alternatif')),
                ('is_processed', models.BooleanField(default=False, verbose_name='Traité')),
                ('is_approved', models.BooleanField(default=True, verbose_name='Approuvé')),
                ('processing_error', models.TextField(blank=True, verbose_name='Erreur de traitement')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_media', to=settings.AUTH_USER_MODEL, verbose_name='Uploadé par')),
            ],
            options={
                'verbose_name': 'Fichier média',
                'verbose_name_plural': 'Fichiers médias',
                'db_table': 'media_files',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MediaAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_views', models.PositiveIntegerField(default=0, verbose_name='Vues totales')),
                ('unique_views', models.PositiveIntegerField(default=0, verbose_name='Vues uniques')),
                ('total_likes', models.PositiveIntegerField(default=0, verbose_name='Likes totaux')),
                ('total_shares', models.PositiveIntegerField(default=0, verbose_name='Partages totaux')),
                ('total_downloads', models.PositiveIntegerField(default=0, verbose_name='Téléchargements totaux')),
                ('average_view_duration', models.FloatField(default=0.0, verbose_name='Durée moyenne de vue (%)')),
                ('bounce_rate', models.FloatField(default=0.0, verbose_name='Taux de rebond (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('media_file', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='media_management.mediafile', verbose_name='Fichier média')),
            ],
            options={
                'verbose_name': 'Analytique média',
                'verbose_name_plural': 'Analytiques médias',
                'db_table': 'media_analytics',
            },
        ),
        migrations.CreateModel(
            name='MediaProcessingQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_type', models.CharField(choices=[('thumbnail_generation', 'Génération de miniatures'), ('video_compression', 'Compression vidéo'), ('image_optimization', 'Optimisation image'), ('metadata_extraction', 'Extraction métadonnées')], max_length=30, verbose_name='Type de tâche')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('processing', 'En cours'), ('completed', 'Terminé'), ('failed', 'Échec')], default='pending', max_length=15, verbose_name='Statut')),
                ('progress', models.PositiveIntegerField(default=0, verbose_name='Progression (%)')),
                ('error_message', models.TextField(blank=True, verbose_name="Message d'erreur")),
                ('result_data', models.JSONField(blank=True, default=dict, verbose_name='Données de résultat')),
                ('priority', models.PositiveIntegerField(default=5, verbose_name='Priorité')),
                ('attempts', models.PositiveIntegerField(default=0, verbose_name='Tentatives')),
                ('max_attempts', models.PositiveIntegerField(default=3, verbose_name='Tentatives max')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Démarré le')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Terminé le')),
                ('media_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_tasks', to='media_management.mediafile', verbose_name='Fichier média')),
            ],
            options={
                'verbose_name': 'Tâche de traitement',
                'verbose_name_plural': 'Tâches de traitement',
                'db_table': 'media_processing_queue',
                'ordering': ['-priority', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='MediaThumbnail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(choices=[('small', 'Petit (150x150)'), ('medium', 'Moyen (400x400)'), ('large', 'Grand (800x800)')], max_length=10, verbose_name='Taille')),
                ('thumbnail', imagekit.models.fields.ProcessedImageField(upload_to='media/thumbnails/', verbose_name='Miniature')),
                ('width', models.PositiveIntegerField(verbose_name='Largeur')),
                ('height', models.PositiveIntegerField(verbose_name='Hauteur')),
                ('file_size', models.PositiveIntegerField(verbose_name='Taille du fichier')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('media_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thumbnails', to='media_management.mediafile', verbose_name='Fichier média')),
            ],
            options={
                'verbose_name': 'Miniature',
                'verbose_name_plural': 'Miniatures',
                'db_table': 'media_thumbnails',
            },
        ),
        migrations.AddIndex(
            model_name='mediafile',
            index=models.Index(fields=['uploaded_by', '-created_at'], name='media_files_uploade_c60f35_idx'),
        ),
        migrations.AddIndex(
            model_name='mediafile',
            index=models.Index(fields=['media_type', '-created_at'], name='media_files_media_t_90b88a_idx'),
        ),
        migrations.AddIndex(
            model_name='mediafile',
            index=models.Index(fields=['usage_type', '-created_at'], name='media_files_usage_t_e221bf_idx'),
        ),
        migrations.AddIndex(
            model_name='mediafile',
            index=models.Index(fields=['is_approved', '-created_at'], name='media_files_is_appr_4f575b_idx'),
        ),
        migrations.AddIndex(
            model_name='mediaprocessingqueue',
            index=models.Index(fields=['status', '-priority'], name='media_proce_status_e37bab_idx'),
        ),
        migrations.AddIndex(
            model_name='mediaprocessingqueue',
            index=models.Index(fields=['media_file', 'task_type'], name='media_proce_media_f_91f8f4_idx'),
        ),
        migrations.AddIndex(
            model_name='mediaprocessingqueue',
            index=models.Index(fields=['-created_at'], name='media_proce_created_08e831_idx'),
        ),
        migrations.AddIndex(
            model_name='mediathumbnail',
            index=models.Index(fields=['media_file', 'size'], name='media_thumb_media_f_d74a75_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='mediathumbnail',
            unique_together={('media_file', 'size')},
        ),
    ]
